# This YAML file defines the configuration for an Aurora project.

project:
  # Project metadata that provides a description and versioning information.
  - description:
      # The name of the project. This is how the project will be identified.
      - name: My Test Project
      # The version of the project. This follows the semantic versioning format (major.minor.patch).
      - version: 1.0.0
      # Indicates whether this is an alpha release. True means the project is still in a testing phase.
      - alpha: true

  # The entry point file of the project, which contains the main logic.
  # The Aurora environment will execute this file when the project runs.
  - main: test.aurora

  # Indicates if the project is set up to run as a script. This allows the Aurora engine
  # to execute the main file directly, rather than compiling an entire application.
  - script: true

  # Configuration for kernels (functions that run on the GPU) in the project.
  - kernels:
      # If set to true, kernels are enabled in this project, allowing certain functions to be
      # offloaded to the GPU for parallel processing and performance optimizations.
      enabled: true
      # The target GPU hardware for executing kernels. This specifies which GPU architecture the
      # kernels should be optimized for (e.g., "nvidia", "amd").
      gpu-target: nvidia
      # Specifies the maximum amount of GPU memory allocated for kernel execution. This helps
      # control memory usage to avoid crashes or slowdowns due to memory exhaustion.
      memory-limits: 2GB

  # Lists the external dependencies the project needs. These are libraries or modules required
  # for the project to compile or run successfully.
  - dependencies:
      # The Aurora standard library, which provides basic functions and types. It specifies the
      # exact version of the library needed for this project.
      - aurora-stdlib: 2.1.0
      # Another external library that the project depends on, with its specific version.
      - some-library: 0.9.3

  # Defines the environment settings for the project during execution.
  - environment:
      # If true, the project will run in debug mode, providing extra logging and diagnostics.
      # False indicates production mode, where debugging features are disabled for performance.
      debug: false
      # The level of optimization applied during project compilation. A higher number means
      # more aggressive optimization, with 3 being the highest level.
      optimization-level: max